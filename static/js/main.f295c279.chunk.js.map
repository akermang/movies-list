{"version":3,"sources":["services/api.service.js","services/data.service.js","componets/EditMovie.Component.jsx","componets/Modal.component.jsx","componets/List.component.jsx","componets/Header.component.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchData","query","fetch","then","response","ok","json","Error","validData","obj","list","key","str","concat","yearErr","year","current_year","Date","getFullYear","toString","length","yearValidation","Year","titleErr","i","Title","imdbID","isTitleValid","EditMovieComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","editMovie","title","runtime","Runtime","genre","Genre","director","Director","setState","onCencel","_this$state","movie","onSave","_this2","_this$state2","message","react_default","a","createElement","Dialog_default","onClose","handleClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","style","textAlign","color","TextField_default","autoFocus","margin","label","type","value","fullWidth","onChange","e","target","DialogActions_default","Button_default","onClick","handleSave","React","Component","ModalComponent","_ref","noCancel","onAction","text","className","aria-describedby","ListComponent","isLoading","isEditMode","openEdit","openModal","selectedMovie","getData","data","Search","forEach","element","toLowerCase","split","map","charAt","toUpperCase","slice","replace","join","formatTitle","movies","push","catch","error","mov","find","index","indexOf","unshift","splice","isMovieEdited","cancelEdit","validation","updateList","newMovie","uniqid","removeMovieFromList","_this3","index_es","disableShrink","Modal_component","canselDelete","deleteMovie","EditMovie_Component","saveEdit","size","aria-label","backgroundColor","Add_default","handleAddNew","primary","secondary","button","handleDelete","Delete_default","onEdit","Edit_default","HeaderComponent","App","Header_component","List_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f295c279.chunk.js","sourcesContent":["const API = 'https://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?';\n\nexport const fetchData = (query) => {\n    return fetch(API + query)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Something went wrong ...');\n        })\n}\n","const isNotEmptyString = (str) => str !== \"\" && typeof (str) === \"string\";\r\n\r\nconst yearValidation = (year) => {\r\n    const current_year = new Date().getFullYear();\r\n    if (year / year !== 1) {\r\n        return \"Year is not proper. Please Enter Numeric Values Only\";\r\n    }\r\n    if (year.toString().length !== 4) {\r\n        return \"Year should be 4 digit like: `2016`. Please check\";\r\n    }\r\n\r\n    if ((year < 1920) || (year > current_year)) {\r\n        return `Year should be in between 1920 to.. ${current_year}`;\r\n    }\r\n}\r\n\r\nconst isTitleValid = (obj, list) => {\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i].Title === obj.Title && list[i].imdbID !== obj.imdbID) {\r\n            return \"same movie title is already exist\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const validData = (obj, list) => {\r\n    for (let key in obj) {\r\n        if (!isNotEmptyString(obj[key])) {\r\n            return `please fill in the ${key} field`\r\n        }\r\n    }\r\n\r\n    let yearErr = yearValidation(obj.Year);\r\n    if (yearErr) {\r\n        return yearErr\r\n    }\r\n\r\n    let titleErr = isTitleValid(obj, list);\r\n    if (titleErr) {\r\n        return titleErr\r\n    }\r\n    return true\r\n}\r\n\r\nexport const formatTitle = title => {\r\n    return title.toLowerCase().split(\" \")\r\n        .map(str => str.charAt(0)\r\n            .toUpperCase() + str.slice(1)\r\n                .replace(/[^a-zA-Z ]/g, \"\"))\r\n        .join(\" \");\r\n}\r\n\r\nexport const isMovieEdited = (movie, editMovie) => {\r\n    return movie.Title === editMovie.Title &&\r\n        movie.Year === editMovie.Year &&\r\n        movie.Runtime === editMovie.Runtime &&\r\n        movie.Genre === editMovie.Genre &&\r\n        movie.Director === editMovie.Director;\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass EditMovieComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: this.props.open,\r\n            editMovie: this.props.editMovie,\r\n            title: this.props.editMovie.Title || \"\",\r\n            year: this.props.editMovie.Year || \"\",\r\n            runtime: this.props.editMovie.Runtime || \"\",\r\n            genre: this.props.editMovie.Genre || \"\",\r\n            director: this.props.editMovie.Director || \"\",\r\n        };\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ open: false });\r\n        this.props.onCencel();\r\n    };\r\n\r\n    handleSave() {\r\n        const { editMovie, title, year, runtime, genre, director } = this.state;\r\n        const movie = {\r\n            imdbID: editMovie.imdbID,\r\n            Title: title,\r\n            Year: year,\r\n            Runtime: runtime,\r\n            Genre: genre,\r\n            Director: director\r\n        }\r\n        this.props.onSave(movie);\r\n    }\r\n\r\n    render() {\r\n        const { title, year, runtime, genre, director } = this.state;\r\n        const { message } = this.props;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={() => this.handleClose()}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">movie info</DialogTitle>\r\n                    <DialogContent>\r\n                        {<DialogContentText style={{ textAlign: \"center\" }} color=\"secondary\">{message}</DialogContentText>}\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            value={title}\r\n                            fullWidth\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Year\"\r\n                            type=\"text\"\r\n                            value={year}\r\n                            fullWidth\r\n                            onChange={(e) => this.setState({ year: e.target.value })}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Runtime\"\r\n                            type=\"text\"\r\n                            value={runtime}\r\n                            fullWidth\r\n                            onChange={(e) => this.setState({ runtime: e.target.value })}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Genre\"\r\n                            type=\"text\"\r\n                            value={genre}\r\n                            fullWidth\r\n                            onChange={(e) => this.setState({ genre: e.target.value })}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Director\"\r\n                            type=\"text\"\r\n                            value={director}\r\n                            fullWidth\r\n                            onChange={(e) => this.setState({ director: e.target.value })}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => this.handleClose()} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={() => this.handleSave()} color=\"secondary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditMovieComponent;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ModalComponent = ({ noCancel, onAction, title, text, open }) => (\r\n    <div className={\"modal-component\"}>\r\n        <Dialog\r\n            open={open}\r\n            onClose={noCancel}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {text}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={noCancel} color=\"primary\">\r\n                    cancel\r\n                </Button>\r\n                <Button onClick={() => onAction()} color=\"secondary\" autoFocus>\r\n                    ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n);\r\n\r\nexport default ModalComponent;\r\n","import React, { Component } from \"react\";\nimport { fetchData } from \"../services/api.service.js\";\nimport { List, Fab, ListItem, ListItemIcon, ListItemText, CircularProgress } from \"@material-ui/core\";\nimport { formatTitle, validData, isMovieEdited } from '../services/data.service';\nimport EditMovieComponent from './EditMovie.Component.jsx';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport uniqid from 'uniqid';\nimport ModalComponent from './Modal.component.jsx'\n\nclass ListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      list: [],\n      editMovie: null,\n      isEditMode: false,\n      message: null,\n      openEdit: false,\n      openModal: false,\n      selectedMovie: null\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    this.setState({ isLoading: true });\n    fetchData(\"y=2019&s=love&apikey=c8cdce26\")\n      .then(data => data.Search.forEach(element => {\n        fetchData(`i=${element.imdbID}&apikey=c8cdce26`)\n          .then(data => {\n            let title = formatTitle(data.Title);\n            data.Title = title;\n            let movies = this.state.list;\n            movies.push(data);\n            this.setState({ list: movies, isLoading: false });\n          })\n      }))\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  onEdit(movie) {\n    this.setState({ editMovie: movie });\n    this.setState({ isEditMode: true })\n    this.setState({ openEdit: true })\n  }\n\n  cancelEdit() {\n    this.setState({ message: null });\n    this.setState({ isEditMode: false });\n  }\n\n  updateList(movie) {\n    let list = this.state.list;\n    let mov = list.find(((mov) => mov.imdbID === movie.imdbID));\n    let index = list.indexOf(mov);\n    index === -1 ? list.unshift(movie) : list.splice(index, 1, movie);\n    this.setState({ list: list });\n  }\n\n  removeMovieFromList(movie) {\n    let list = this.state.list;\n    let mov = list.find(((mov) => mov.imdbID === movie.imdbID));\n    let index = list.indexOf(mov);\n    index >= 0 ? list.splice(index, 1) : movie = {};\n    this.setState({ list: list });\n  }\n\n  saveEdit(movie) {\n    let notEdited = isMovieEdited(movie, this.state.editMovie);\n    if (notEdited) {\n      this.cancelEdit();\n      return\n    }\n\n    let validation = validData(movie, this.state.list);\n    if (validation === true) {\n      this.updateList(movie);\n      this.setState({ message: null })\n      this.cancelEdit();\n      return\n    }\n\n    this.setState({ message: validation });\n  }\n\n  handleAddNew() {\n    let imdbID = uniqid();\n    let newMovie = { imdbID: imdbID }\n    this.setState({ editMovie: newMovie });\n    this.setState({ isEditMode: true })\n    this.setState({ openEdit: true })\n\n  }\n\n  handleDelete(movie) {\n    this.setState({ selectedMovie: movie })\n    this.setState({ openModal: true })\n  }\n\n  deleteMovie(movie) {\n    this.removeMovieFromList(movie);\n    this.setState({ selectedMovie: {} });\n    this.setState({ openModal: false });\n  }\n\n  canselDelete() {\n    this.setState({ openModal: false });\n    this.setState({ selectedMovie: {} })\n  }\n\n  render() {\n    const { list, isLoading, editMovie, isEditMode, message, openEdit, selectedMovie } = this.state;\n    return (\n      <div className=\"container\">\n        <div className={\"main-container\"}>\n\n          {isLoading ? <div className={\"loader\"}><CircularProgress disableShrink />.</div> : null}\n\n          <ModalComponent\n            noCancel={() => this.canselDelete()}\n            onAction={() => this.deleteMovie(selectedMovie)}\n            title={selectedMovie ? `delete: ${selectedMovie.Title}..?` : null}\n            text={selectedMovie ? `are you ok with it?` : null}\n            open={this.state.openModal}\n          />\n\n          {isEditMode &&\n          <EditMovieComponent\n            editMovie={editMovie}\n            open={openEdit}\n            onCencel={() => this.cancelEdit()}\n            onSave={movie => this.saveEdit(movie)}\n            message={message}\n          />}\n\n\n          <Fab\n            className=\"fab add-fab\"\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            style={{ backgroundColor: \"green\" }}\n          >\n            <AddIcon onClick={() => this.handleAddNew()} />\n          </Fab>\n\n          <List className=\"movies-list\">\n            {list.map(movie => (\n              <ListItem className=\"list-item\" key={movie.imdbID}>\n                <ListItemText primary={`${movie.Title}  | ${movie.Year}`} secondary={`\n                  ${movie.Runtime} |\n                  ${movie.Genre} |\n                  Director: ${movie.Director} |\n                  ${movie.imdbID}`} />\n                <ListItemIcon button=\"true\" onClick={() => this.handleDelete(movie)}>\n                  <Fab size=\"small\" color=\"primary\" aria-label=\"Delete\" className=\"fab delete-fab\" style={{ backgroundColor: \"#af3a3a\" }}>\n                    <DeleteIcon />\n                  </Fab>\n                </ListItemIcon>\n                <ListItemIcon button=\"true\" onClick={() => this.onEdit(movie)}>\n                  <Fab size=\"small\" color=\"primary\" aria-label=\"Edit\" className=\"fab\">\n                    <EditIcon />\n                  </Fab>\n                </ListItemIcon>\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListComponent;\n","import React from \"react\";\n\nconst HeaderComponent = () => (\n  <div className={\"header-component\"}>My Movies list</div>\n);\n\nexport default HeaderComponent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ListComponent from './componets/List.component.jsx';\nimport HeaderComponent from './componets/Header.component.jsx';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n       <HeaderComponent/>\n       <ListComponent/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}